
Feel free to add items to this TODO list

* Managed Code:

	Change all the calls to DependencyProperty.Register to
	DependencyProperty.Lookup so that we actually get the
	unmanaged properties.

	Complete the marshalling in both directions for all known
	values in DependencyObject.

	Write sample code to exercise every property.

* DependecyProperty-fication

	A few components still have instance properties that
	should be handled as dependencyproperties, look into that.

* Video Player:

	Add support for seeking, stopping, shutdown.

	Fix the memory leak that it currently has that brings the 
	system down.

* Reference counting and destruction

	Need to properly shut down the runtime.

	Need managed runtime to:

		* Take a ref on creation (to sink the object)
		* Finalizer, to queue unrefs like Gtk#
		* Something to release the queued refs

		* Use SafeFileHandle to prevent queueing of
	  	  a destruction when we pass an object to unmanaged
		  land during a P/Invoke

* XAML Support

	For panel_child_add, we need as precise type information
	as possible, so when these objects are exposed to the managed
	side we can create the proper managed wrapper for it.

	Add support to each element to be created from a xaml string.

	Need to support attached properties

	XAML needs to be case sensitive

* Paths

	Sam Ruby had some path tests, we could use that as test cases.
	http://intertwingly.net/stories/2007/05/06/

* Shapes

	All shapes must implement the ::getxformorigin method, the metho
	is used to determine the center of the object.

* Color

	Right now the unmanaged side use 4 doubles for colors (ARGB), 
	while the managed side use an uint (4 bytes) and must also give
	float (not double) representations (ScA, ScR, ScG & ScB). All 
	this will eventually need to be merged into a single 
	representation
