
Feel free to add items to this TODO list

* Base classes / Reference counting:

	Right now we have two base classes below DependencyObject
	(Base and EventObject).  These should be merged into 1 class
	that provides both sets of functionality (reference counting
	and events, respectively.)  This would allow us to write a
	more general weak reference system instead of the special case
	one that exists now (The EventObject::DestroyedEvent stuff
	used by the AnimationStorage class).

* Samples:

	Although we are going to need to have API coverage through
	writing tests, a good way of getting stuff done would be to
	identify some demo applications to get working:

		* Chess program.
		* Silverlight airlines.
		* Page turner sample
		* Stock wizard-generated video players.

	See demo-status.txt for more samples and their status.

* IsolatedStorage

	The class hierarchy of IsolatedStorage in 2.1 is different
	than in 2.0 and in particular the ApplicationIdentity class
	does not exist, which probably makes things simpler, but also
	means that we will need a 2.1 mscorlib before we can get these
	apps running properly.	

* Plugin

	Need to destroy the appdomain when the instance is destroyed.

	Need to track down who is calling surface_repaint after we have
	destroyed the plugin.

	Need to make sure that Downloaders get the plugin_instance pointer
	from the caller instead of the current hack that picsk the first
	available plugin from the list of plugins as the owner of the request. 

* Downloader

	Add support for handling errors on the plugin on downloads.

	Add support for logging the actual HTTP return code, and text.

	Investigate: if Send is called twice, are two connections open, or only the first Send works?

	Image and the Downloader: if I set an Image source to be a downloader, does that
	automaticlaly call Send on the downloader?   Currently we do, but does MS?

	Investigate Exception: what happens if you call "Send" without calling Open first?

* Managed Downloader

	Implement a cache for uris to avoid downloading the same file more
	than once.

	Implement a check for modification on the requested file to
	avoid downloading again.

	Queue multiple downloads to the same url and notify multiple
	sources of the image  being ready at the same time.

	Optimization: if we are coping with a local file, immediately send
	the "done" notifications.

* Managed Code:

	Write sample code to exercise every property.

* UIElement

	Need to add support for events:

	Event: Loaded
		This probably should be used instead of the current
		hack that we have, lookup what the semantics for it
		are.

	Events: Focus

		Have to investigate what it means to get "focus"
		with UIElements, there are two signals, GotFocus
		and LostFocus, but what do they mean?

* Mouse events

	Since we are going to be using the linker to thin out various
	libraries maybe we should thin out AGCLR as well, and by default
	install a more capable AGCLR.

	In particular this would be interesting for handling other
	mouse events other than "button1".

* Video Player:

	Expose properties to managed world.

	Implement Downloader

* Reference counting and destruction

	Need to properly shut down the runtime.

	Need managed runtime to:

		* Take a ref on creation (to sink the object)
		* Finalizer, to queue unrefs like Gtk#
		* Something to release the queued refs

		* Use SafeFileHandle to prevent queueing of
	  	  a destruction when we pass an object to unmanaged
		  land during a P/Invoke


* Paths

	Sam Ruby had some path tests, we could use that as test cases.
	http://intertwingly.net/stories/2007/05/06/

* Shapes

	Many shapes requires the ::getxformorigin method, the method
	is used to determine the center of the object. Some shapes (e.g.
	Lines) don't have center as their position isn't given wrt to 
	the Canvas Top and Left properties (e.g. Line supplies X1,Y1 and
	X2,Y2). Not sure ? Add a test case ;-)

* Color

	Right now the unmanaged side use 4 doubles for colors (ARGB), 
	while the managed side use an uint (4 bytes) and must also give
	float (not double) representations (ScA, ScR, ScG & ScB). All 
	this will eventually need to be merged into a single 
	representation

* Gtk Hackery

	For some reason I cant get moon/test/demo.exe program to focus the
	Silverlight widget even if I click on it and I do a
	gtk_widget_grab_focus, am probably missing something.

* Text

	Find out why ligatures are not happening for certain scripts.

* Image::OnPropertyChanges and MediaElement::OnPropertyChanges

	We could avoid clearing the downloader here, and just let
	SetSource abort old downloaders, and clear the values.

* Fullscreen
	
	Implement the "You're now in fullscreen mode, press ESC to exit" message.
