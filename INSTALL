Installing Dependencies
=======================

	To build Moonlight, you need to install a few dependencies for
	the basic runtime engine (this is needed to support both API
	profiles: Silverlight 1.0 and 2.0).

	You will need the following dependencies:
		libexpat
		glib2
		gtk+
		gtk-sharp2
		rsvg2-sharp
	
	To build the mozilla plugin you will need xulrunner packages 
	for your requisite firefox version.

	You will need alsa or pulse-audio for audio support.

Build Mono
==========

	You currently need a working Mono from svn. The latest known working 
	revision is r132992. Check #moonlight on irc.gimp.org for more info

	Check out mono,mcs,mono-basic from svn
		svn co -rREV svn://anonsvn.mono-project.com/source/trunk/mono
		svn co -rREV svn://anonsvn.mono-project.com/source/trunk/mcs
		svn co svn://anonsvn.mono-project.com/source/trunk/mono-basic

	In mono, do the usual ./autogen.sh && make && make install

	See http://mono-project.com/Parallel_Mono_Environments 
	for tips on running in multiple Mono environments

	Make mono-basic 
		./configure && make && make install


Moonlight Configuration Options
=====================
	We do not support building moonlight 1.0 from HEAD anymore.
	For only Moonlight 1.0 support, checkout our branch at
	svn://anonsvn.mono-project.com/source/branches/moon-1-0

	Moonlight is now focused on Silverlight 2.0 support. Moonlight needs
	to know where to find the mcs and mono-basic directories. 

	--with-mcspath=<path>

		By default moon looks for ../mcs. 

	--with-mono-basic-path=<path>

		By default moon looks for ../mono-basic.

	--with-alsa=yes,no

		To enable audio using the ALSA stack, this can be
		mixed with --with-pulse-audio=yes

	--with-pulse-audio=yes,no

		To enable audio using the Pulse Audio stack, this can
		be mixed with --with-alsa=yes

	--with-testing=yes,no

		Enable/disable unit tests (default=yes)

	--with-performance=yes|no

		Enable/disable the performance tests (default=yes)




Installing Moonlight
====================

	(Note: if you are building Moonlight from an svn checkout,
	you'll need to run ./autogen.sh first.)

	Configure the build system by running ./configure with any
	configuration options you might want (see the "Configuration
	Options" section). For example, a typical configure might be:

		./configure --prefix=/usr/local --with-mcs-path=<path/to/mcs>

	Once ./configure has finished, you'll need to actually compile
	and install Moonlight using the following command:

		make && make install

	After Moonlight has finished building and installing, you'll
	need to install the plugin so that Firefox will be able to
	load it when it encounters a Silverlight-enabled website:

		make test-plugin

Building the .xpi
================

	To build a mozilla plugin installer (XPI), you must have the Firefox
	packages installed. Building the xpi builds a modified libmoon and 
	libmoonloader that the xpi will use. 

	When you configured, you should have seen something like this:

		Browser Support:
			Firefox: yes
	          Plugin Installer (.xpi): yes
	          Gecko 1.8 (Firefox 2): no (reason: missing FF2 development packages)
	          Gecko 1.9 (Firefox 3): yes 

	After you run make, then run make user-plugin

	The plugin is located at moon/plugin/install/novell-moonlight.xpi

	To install the plugin open the .xpi with your mozilla-based browser
	and follow the prompts. Moonlight should now be properly installed 
	and ready to be used.
