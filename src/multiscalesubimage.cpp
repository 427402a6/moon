/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
/*
 * multiscalesubimage.cpp
 *
 * Contact:
 *   Moonlight List (moonlight-list@lists.ximian.com)
 *
 * Copyright 2007-2008 Novell, Inc. (http://www.novell.com)
 *
 * See the LICENSE file included with the distribution for details.
 * 
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include <glib.h>

#include "debug.h"
#include "runtime.h"
#include "deepzoomimagetilesource.h"
#include "multiscalesubimage.h"

MultiScaleSubImage::MultiScaleSubImage ()
{
	SetObjectType (Type::MULTISCALESUBIMAGE);
	source = NULL;	
}

MultiScaleSubImage::MultiScaleSubImage (const char* parent_uri, MultiScaleTileSource *tsource, int _id, int _n)
{
	LOG_MSI ("new MultiScaleSubImage ()\n");
	SetObjectType (Type::MULTISCALESUBIMAGE);
	source = tsource;
	id = _id;
	n = _n;

	//FIXME: for now I strip the latest part of parent_uri and concat the uri from tsource.
	//it seems to work for images generated by DeepZoom, but it's not bulletproof
	if (g_str_has_prefix (((DeepZoomImageTileSource*)source)->GetUriSource (), "http://"))
		return;
	const char *urisource = ((DeepZoomImageTileSource*)source)->GetUriSource ();
	char buffer [strlen (parent_uri) + strlen (urisource)];
	strcpy (buffer, parent_uri);
	char *p = g_strrstr (buffer, "/");
	if (!p)
		return;

	strcpy (p + 1, urisource);
	LOG_MSI ("UriSource changed to %s (from %s)\n", buffer, urisource);
	((DeepZoomImageTileSource*)source)->SetUriSource (g_strdup (buffer));
}

double
MultiScaleSubImage::GetViewportHeight ()
{
	return GetAspectRatio () * GetViewportWidth ();
}
