/*
 * Automatically generated, do not edit this file directly
 */


#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include "animation.h"
#include "brush.h"
#include "canvas.h"
#include "clock.h"
#include "collection.h"
#include "color.h"
#include "dependencyobject.h"
#include "dependencyproperty.h"
#include "downloader.h"
#include "frameworkelement.h"
#include "geometry.h"
#include "media.h"
#include "namescope.h"
#include "panel.h"
#include "shape.h"
#include "stylus.h"
#include "text.h"
#include "transform.h"
#include "trigger.h"
#include "uielement.h"
#if SL_2_0
#include "animation.h"
#include "animation2.h"
#include "contentcontrol.h"
#include "control.h"
#include "deployment.h"
#include "frameworkelement.h"
#include "grid.h"
#include "stackpanel.h"
#include "style.h"
#include "template.h"
#include "text.h"
#include "usercontrol.h"
#endif

bool dependency_properties_initialized = false;
void
dependency_property_g_init (void)
{
	if (dependency_properties_initialized)
		return;
	dependency_properties_initialized = true;
#if SL_2_0

	Application::ResourcesProperty = DependencyProperty::Register (Type::APPLICATION, "Resources", Type::RESOURCE_DICTIONARY);
#endif
	ArcSegment::IsLargeArcProperty = DependencyProperty::Register (Type::ARCSEGMENT, "IsLargeArc", new Value (false));
	ArcSegment::PointProperty = DependencyProperty::Register (Type::ARCSEGMENT, "Point", Type::POINT);
	ArcSegment::RotationAngleProperty = DependencyProperty::Register (Type::ARCSEGMENT, "RotationAngle", new Value (0.0));
	ArcSegment::SizeProperty = DependencyProperty::Register (Type::ARCSEGMENT, "Size", Type::POINT);
	ArcSegment::SweepDirectionProperty = DependencyProperty::Register (Type::ARCSEGMENT, "SweepDirection", new Value (SweepDirectionCounterclockwise));
#if SL_2_0

	AssemblyPart::SourceProperty = DependencyProperty::Register (Type::ASSEMBLYPART, "Source", Type::STRING);
#endif
	BeginStoryboard::StoryboardProperty = DependencyProperty::Register (Type::BEGINSTORYBOARD, "Storyboard", Type::STORYBOARD);
	BezierSegment::Point1Property = DependencyProperty::Register (Type::BEZIERSEGMENT, "Point1", Type::POINT);
	BezierSegment::Point2Property = DependencyProperty::Register (Type::BEZIERSEGMENT, "Point2", Type::POINT);
	BezierSegment::Point3Property = DependencyProperty::Register (Type::BEZIERSEGMENT, "Point3", Type::POINT);
	Brush::ChangedProperty = DependencyProperty::Register (Type::BRUSH, "Changed", Type::BOOL);
	Brush::OpacityProperty = DependencyProperty::Register (Type::BRUSH, "Opacity", new Value (1.0));
	Brush::RelativeTransformProperty = DependencyProperty::Register (Type::BRUSH, "RelativeTransform", Type::TRANSFORM);
	Brush::TransformProperty = DependencyProperty::Register (Type::BRUSH, "Transform", Type::TRANSFORM);
	Canvas::LeftProperty = DependencyProperty::RegisterFull (Type::CANVAS, "Left", new Value (0.0), Type::DOUBLE, true, false);
	Canvas::TopProperty = DependencyProperty::RegisterFull (Type::CANVAS, "Top", new Value (0.0), Type::DOUBLE, true, false);
	Collection::CountProperty = DependencyProperty::Register (Type::COLLECTION, "Count", new Value (0));
	ColorAnimation::ByProperty = DependencyProperty::RegisterNullable (Type::COLORANIMATION, "By", Type::COLOR);
	ColorAnimation::FromProperty = DependencyProperty::RegisterNullable (Type::COLORANIMATION, "From", Type::COLOR);
	ColorAnimation::ToProperty = DependencyProperty::RegisterNullable (Type::COLORANIMATION, "To", Type::COLOR);
	ColorAnimationUsingKeyFrames::KeyFramesProperty = DependencyProperty::Register (Type::COLORANIMATIONUSINGKEYFRAMES, "KeyFrames", Type::COLORKEYFRAME_COLLECTION);
#if SL_2_0

	ColorKeyFrame::KeyTimeProperty = DependencyProperty::Register (Type::COLORKEYFRAME, "KeyTime", Type::KEYTIME);
#endif
	ColorKeyFrame::ValueProperty = DependencyProperty::RegisterNullable (Type::COLORKEYFRAME, "Value", Type::COLOR);
#if SL_2_0

	ColumnDefinition::MaxWidthProperty = DependencyProperty::Register (Type::COLUMNDEFINITION, "MaxWidth", Type::DOUBLE);
	ColumnDefinition::MinWidthProperty = DependencyProperty::Register (Type::COLUMNDEFINITION, "MinWidth", Type::DOUBLE);
	ColumnDefinition::WidthProperty = DependencyProperty::Register (Type::COLUMNDEFINITION, "Width", Type::GRIDLENGTH);
	ContentControl::ContentProperty = DependencyProperty::Register (Type::CONTENTCONTROL, "Content", Type::DEPENDENCY_OBJECT);
	ContentControl::ContentTemplateProperty = DependencyProperty::Register (Type::CONTENTCONTROL, "ContentTemplate", Type::DEPENDENCY_OBJECT);
	ContentControl::IsEnabledProperty = DependencyProperty::Register (Type::CONTENTCONTROL, "IsEnabled", new Value (true));
	ContentControl::TextAlignmentProperty = DependencyProperty::Register (Type::CONTENTCONTROL, "TextAlignment", new Value (TextAlignmentLeft));
	ContentControl::TextDecorationsProperty = DependencyProperty::Register (Type::CONTENTCONTROL, "TextDecorations", new Value (TextDecorationsNone));
	ContentControl::TextWrappingProperty = DependencyProperty::Register (Type::CONTENTCONTROL, "TextWrapping", new Value (TextWrappingNoWrap));
	Control::BackgroundProperty = DependencyProperty::Register (Type::CONTROL, "Background", Type::BRUSH);
	Control::BorderBrushProperty = DependencyProperty::Register (Type::CONTROL, "BorderBrush", Type::BRUSH);
	Control::BorderThicknessProperty = DependencyProperty::Register (Type::CONTROL, "BorderThickness", new Value (Thickness(0.0)));
	Control::FontFamilyProperty = DependencyProperty::Register (Type::CONTROL, "FontFamily", new Value (CONTROL_FONT_FAMILY));
	Control::FontSizeProperty = DependencyProperty::Register (Type::CONTROL, "FontSize", new Value (CONTROL_FONT_SIZE));
	Control::FontStretchProperty = DependencyProperty::Register (Type::CONTROL, "FontStretch", new Value (CONTROL_FONT_STRETCH));
	Control::FontStyleProperty = DependencyProperty::Register (Type::CONTROL, "FontStyle", new Value (CONTROL_FONT_STYLE));
	Control::FontWeightProperty = DependencyProperty::Register (Type::CONTROL, "FontWeight", new Value (CONTROL_FONT_WEIGHT));
	Control::ForegroundProperty = DependencyProperty::Register (Type::CONTROL, "Foreground", Type::BRUSH);
	Control::HorizontalContentAlignmentProperty = DependencyProperty::Register (Type::CONTROL, "HorizontalContentAlignment", new Value (HorizontalAlignmentCenter));
	Control::IsTabStopProperty = DependencyProperty::Register (Type::CONTROL, "IsTabStop", new Value (true));
	Control::PaddingProperty = DependencyProperty::Register (Type::CONTROL, "Padding", new Value (Thickness(0.0)));
	Control::StyleProperty = DependencyProperty::Register (Type::CONTROL, "Style", Type::STYLE);
	Control::TabIndexProperty = DependencyProperty::Register (Type::CONTROL, "TabIndex", new Value (INT_MAX));
	Control::TabNavigationProperty = DependencyProperty::Register (Type::CONTROL, "TabNavigation", new Value (KeyboardNavigationModeLocal));
	Control::TemplateProperty = DependencyProperty::Register (Type::CONTROL, "Template", Type::CONTROLTEMPLATE);
	Control::VerticalContentAlignmentProperty = DependencyProperty::Register (Type::CONTROL, "VerticalContentAlignment", new Value (VerticalAlignmentCenter));
	ControlTemplate::TargetTypeProperty = DependencyProperty::Register (Type::CONTROLTEMPLATE, "TargetType", Type::MANAGED);
#endif
	DependencyObject::NameProperty = DependencyProperty::Register (Type::DEPENDENCY_OBJECT, "Name", Type::STRING);
#if SL_2_0

	Deployment::EntryPointAssemblyProperty = DependencyProperty::Register (Type::DEPLOYMENT, "EntryPointAssembly", Type::STRING);
	Deployment::EntryPointTypeProperty = DependencyProperty::Register (Type::DEPLOYMENT, "EntryPointType", Type::STRING);
	Deployment::ExternalCallersFromCrossDomainProperty = DependencyProperty::Register (Type::DEPLOYMENT, "ExternalCallersFromCrossDomain", new Value (CrossDomainAccessNoAccess));
	Deployment::PartsProperty = DependencyProperty::Register (Type::DEPLOYMENT, "Parts", Type::ASSEMBLYPART_COLLECTION);
	Deployment::RuntimeVersionProperty = DependencyProperty::Register (Type::DEPLOYMENT, "RuntimeVersion", Type::STRING);
#endif
	DoubleAnimation::ByProperty = DependencyProperty::RegisterNullable (Type::DOUBLEANIMATION, "By", Type::DOUBLE);
	DoubleAnimation::FromProperty = DependencyProperty::RegisterNullable (Type::DOUBLEANIMATION, "From", Type::DOUBLE);
	DoubleAnimation::ToProperty = DependencyProperty::RegisterNullable (Type::DOUBLEANIMATION, "To", Type::DOUBLE);
	DoubleAnimationUsingKeyFrames::KeyFramesProperty = DependencyProperty::Register (Type::DOUBLEANIMATIONUSINGKEYFRAMES, "KeyFrames", Type::DOUBLEKEYFRAME_COLLECTION);
#if SL_2_0

	DoubleKeyFrame::KeyTimeProperty = DependencyProperty::Register (Type::DOUBLEKEYFRAME, "KeyTime", Type::KEYTIME);
#endif
	DoubleKeyFrame::ValueProperty = DependencyProperty::RegisterNullable (Type::DOUBLEKEYFRAME, "Value", Type::DOUBLE);
	Downloader::DownloadProgressProperty = DependencyProperty::Register (Type::DOWNLOADER, "DownloadProgress", new Value (0.0));
	Downloader::ResponseTextProperty = DependencyProperty::Register (Type::DOWNLOADER, "ResponseText", Type::STRING);
	Downloader::StatusProperty = DependencyProperty::Register (Type::DOWNLOADER, "Status", new Value (0));
	Downloader::StatusTextProperty = DependencyProperty::Register (Type::DOWNLOADER, "StatusText", new Value (""));
	Downloader::UriProperty = DependencyProperty::Register (Type::DOWNLOADER, "Uri", Type::STRING);
	DrawingAttributes::ColorProperty = DependencyProperty::Register (Type::DRAWINGATTRIBUTES, "Color", new Value (Color (0xFF000000)));
	DrawingAttributes::HeightProperty = DependencyProperty::Register (Type::DRAWINGATTRIBUTES, "Height", new Value (3.0));
	DrawingAttributes::OutlineColorProperty = DependencyProperty::Register (Type::DRAWINGATTRIBUTES, "OutlineColor", new Value (Color (0x00000000)));
	DrawingAttributes::WidthProperty = DependencyProperty::Register (Type::DRAWINGATTRIBUTES, "Width", new Value (3.0));
	EllipseGeometry::CenterProperty = DependencyProperty::Register (Type::ELLIPSEGEOMETRY, "Center", Type::POINT);
	EllipseGeometry::RadiusXProperty = DependencyProperty::Register (Type::ELLIPSEGEOMETRY, "RadiusX", new Value (0.0));
	EllipseGeometry::RadiusYProperty = DependencyProperty::Register (Type::ELLIPSEGEOMETRY, "RadiusY", new Value (0.0));
	EventTrigger::ActionsProperty = DependencyProperty::Register (Type::EVENTTRIGGER, "Actions", Type::TRIGGERACTION_COLLECTION);
	EventTrigger::RoutedEventProperty = DependencyProperty::Register (Type::EVENTTRIGGER, "RoutedEvent", Type::STRING);
#if SL_2_0

	FrameworkElement::ActualHeightProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "ActualHeight", new Value (0.0));
	FrameworkElement::ActualWidthProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "ActualWidth", new Value (0.0));
	FrameworkElement::DataContextProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "DataContext", Type::MANAGED);
#endif
	FrameworkElement::HeightProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "Height", new Value (0.0));
#if SL_2_0

	FrameworkElement::HorizontalAlignmentProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "HorizontalAlignment", new Value (HorizontalAlignmentStretch));
	FrameworkElement::LanguageProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "Language", new Value ("en-US"));
	FrameworkElement::MarginProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "Margin", new Value (Thickness (0)));
	FrameworkElement::MaxHeightProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "MaxHeight", new Value (INFINITY));
	FrameworkElement::MaxWidthProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "MaxWidth", new Value (INFINITY));
	FrameworkElement::MinHeightProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "MinHeight", new Value (0.0));
	FrameworkElement::MinWidthProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "MinWidth", new Value (0.0));
	FrameworkElement::StyleProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "Style", Type::MANAGED);
	FrameworkElement::VerticalAlignmentProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "VerticalAlignment", new Value (VerticalAlignmentStretch));
#endif
	FrameworkElement::WidthProperty = DependencyProperty::Register (Type::FRAMEWORKELEMENT, "Width", new Value (0.0));
	Geometry::FillRuleProperty = DependencyProperty::Register (Type::GEOMETRY, "FillRule", new Value (FillRuleEvenOdd));
	Geometry::TransformProperty = DependencyProperty::Register (Type::GEOMETRY, "Transform", Type::TRANSFORM);
	GeometryGroup::ChildrenProperty = DependencyProperty::Register (Type::GEOMETRYGROUP, "Children", Type::GEOMETRY_COLLECTION);
	Glyphs::FillProperty = DependencyProperty::Register (Type::GLYPHS, "Fill", Type::BRUSH);
	Glyphs::FontRenderingEmSizeProperty = DependencyProperty::Register (Type::GLYPHS, "FontRenderingEmSize", new Value (0.0));
	Glyphs::FontUriProperty = DependencyProperty::Register (Type::GLYPHS, "FontUri", Type::STRING);
	Glyphs::IndicesProperty = DependencyProperty::Register (Type::GLYPHS, "Indices", Type::STRING);
	Glyphs::OriginXProperty = DependencyProperty::Register (Type::GLYPHS, "OriginX", new Value (0.0));
	Glyphs::OriginYProperty = DependencyProperty::Register (Type::GLYPHS, "OriginY", new Value (0.0));
	Glyphs::StyleSimulationsProperty = DependencyProperty::Register (Type::GLYPHS, "StyleSimulations", new Value (StyleSimulationsNone));
	Glyphs::UnicodeStringProperty = DependencyProperty::Register (Type::GLYPHS, "UnicodeString", Type::STRING);
	GradientBrush::ColorInterpolationModeProperty = DependencyProperty::Register (Type::GRADIENTBRUSH, "ColorInterpolationMode", new Value (ColorInterpolationModeSRgbLinearInterpolation));
	GradientBrush::GradientStopsProperty = DependencyProperty::Register (Type::GRADIENTBRUSH, "GradientStops", Type::GRADIENTSTOP_COLLECTION);
	GradientBrush::MappingModeProperty = DependencyProperty::Register (Type::GRADIENTBRUSH, "MappingMode", new Value (BrushMappingModeRelativeToBoundingBox));
	GradientBrush::SpreadMethodProperty = DependencyProperty::Register (Type::GRADIENTBRUSH, "SpreadMethod", new Value (GradientSpreadMethodPad));
	GradientStop::ColorProperty = DependencyProperty::Register (Type::GRADIENTSTOP, "Color", new Value (Color (0x00000000)));
	GradientStop::OffsetProperty = DependencyProperty::Register (Type::GRADIENTSTOP, "Offset", new Value (0.0));
#if SL_2_0

	Grid::ColumnDefinitionsProperty = DependencyProperty::Register (Type::GRID, "ColumnDefinitions", Type::COLUMNDEFINITION_COLLECTION);
	Grid::ColumnProperty = DependencyProperty::RegisterFull (Type::GRID, "Column", new Value (0), Type::INT32, true, false);
	Grid::ColumnSpanProperty = DependencyProperty::RegisterFull (Type::GRID, "ColumnSpan", new Value (0), Type::INT32, true, false);
	Grid::RowDefinitionsProperty = DependencyProperty::Register (Type::GRID, "RowDefinitions", Type::ROWDEFINITION_COLLECTION);
	Grid::RowProperty = DependencyProperty::RegisterFull (Type::GRID, "Row", new Value (0), Type::INT32, true, false);
	Grid::RowSpanProperty = DependencyProperty::RegisterFull (Type::GRID, "RowSpan", new Value (0), Type::INT32, true, false);
	Grid::ShowGridLinesProperty = DependencyProperty::RegisterFull (Type::GRID, "ShowGridLines", new Value (false), Type::BOOL, true, false);
#endif
	ImageBrush::DownloadProgressProperty = DependencyProperty::Register (Type::IMAGEBRUSH, "DownloadProgress", new Value (0.0));
	ImageBrush::ImageSourceProperty = DependencyProperty::Register (Type::IMAGEBRUSH, "ImageSource", new Value (""));
	InkPresenter::StrokesProperty = DependencyProperty::Register (Type::INKPRESENTER, "Strokes", Type::STROKE_COLLECTION);
	Inline::FontFamilyProperty = DependencyProperty::Register (Type::INLINE, "FontFamily", new Value (TEXTBLOCK_FONT_FAMILY));
	Inline::FontSizeProperty = DependencyProperty::Register (Type::INLINE, "FontSize", new Value (TEXTBLOCK_FONT_SIZE));
	Inline::FontStretchProperty = DependencyProperty::Register (Type::INLINE, "FontStretch", new Value (TEXTBLOCK_FONT_STRETCH));
	Inline::FontStyleProperty = DependencyProperty::Register (Type::INLINE, "FontStyle", new Value (TEXTBLOCK_FONT_STYLE));
	Inline::FontWeightProperty = DependencyProperty::Register (Type::INLINE, "FontWeight", new Value (TEXTBLOCK_FONT_WEIGHT));
	Inline::ForegroundProperty = DependencyProperty::Register (Type::INLINE, "Foreground", Type::BRUSH);
#if SL_2_0

	Inline::LanguageProperty = DependencyProperty::Register (Type::INLINE, "Language", new Value ("en-US"));
#endif
	Inline::TextDecorationsProperty = DependencyProperty::Register (Type::INLINE, "TextDecorations", new Value (TextDecorationsNone));
	KeyFrame::KeyTimeProperty = DependencyProperty::RegisterNullable (Type::KEYFRAME, "KeyTime", Type::KEYTIME);
	Line::X1Property = DependencyProperty::Register (Type::LINE, "X1", new Value (0.0));
	Line::X2Property = DependencyProperty::Register (Type::LINE, "X2", new Value (0.0));
	Line::Y1Property = DependencyProperty::Register (Type::LINE, "Y1", new Value (0.0));
	Line::Y2Property = DependencyProperty::Register (Type::LINE, "Y2", new Value (0.0));
	LinearGradientBrush::EndPointProperty = DependencyProperty::Register (Type::LINEARGRADIENTBRUSH, "EndPoint", Type::POINT);
	LinearGradientBrush::StartPointProperty = DependencyProperty::Register (Type::LINEARGRADIENTBRUSH, "StartPoint", Type::POINT);
	LineGeometry::EndPointProperty = DependencyProperty::Register (Type::LINEGEOMETRY, "EndPoint", Type::POINT);
	LineGeometry::StartPointProperty = DependencyProperty::Register (Type::LINEGEOMETRY, "StartPoint", Type::POINT);
	LineSegment::PointProperty = DependencyProperty::Register (Type::LINESEGMENT, "Point", Type::POINT);
	Matrix::M11Property = DependencyProperty::Register (Type::MATRIX, "M11", new Value (1.0));
	Matrix::M12Property = DependencyProperty::Register (Type::MATRIX, "M12", new Value (0.0));
	Matrix::M21Property = DependencyProperty::Register (Type::MATRIX, "M21", new Value (0.0));
	Matrix::M22Property = DependencyProperty::Register (Type::MATRIX, "M22", new Value (1.0));
	Matrix::OffsetXProperty = DependencyProperty::Register (Type::MATRIX, "OffsetX", new Value (0.0));
	Matrix::OffsetYProperty = DependencyProperty::Register (Type::MATRIX, "OffsetY", new Value (0.0));
	MatrixTransform::MatrixProperty = DependencyProperty::Register (Type::MATRIXTRANSFORM, "Matrix", Type::MATRIX);
	MediaAttribute::ValueProperty = DependencyProperty::Register (Type::MEDIAATTRIBUTE, "Value", Type::STRING);
	MediaBase::DownloadProgressProperty = DependencyProperty::Register (Type::MEDIABASE, "DownloadProgress", new Value (0.0));
	MediaBase::SourceProperty = DependencyProperty::RegisterFull (Type::MEDIABASE, "Source", NULL, Type::STRING, false, false, true, NULL);
	MediaBase::StretchProperty = DependencyProperty::Register (Type::MEDIABASE, "Stretch", new Value (StretchUniform));
	MediaElement::AttributesProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "Attributes", Type::MEDIAATTRIBUTE_COLLECTION);
	MediaElement::AudioStreamCountProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "AudioStreamCount", new Value (0), Type::INT32, false, true);
	MediaElement::AudioStreamIndexProperty = DependencyProperty::RegisterNullable (Type::MEDIAELEMENT, "AudioStreamIndex", Type::INT32);
	MediaElement::AutoPlayProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "AutoPlay", new Value (true));
	MediaElement::BalanceProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "Balance", new Value (0.0));
	MediaElement::BufferingProgressProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "BufferingProgress", new Value (0.0), Type::DOUBLE, false, true);
	MediaElement::BufferingTimeProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "BufferingTime", new Value (TimeSpan_FromSeconds (5),Type::TIMESPAN));
	MediaElement::CanPauseProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "CanPause", new Value (false), Type::BOOL, false, true);
	MediaElement::CanSeekProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "CanSeek", new Value (false), Type::BOOL, false, true);
	MediaElement::CurrentStateProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "CurrentState", NULL, Type::STRING, false, true);
	MediaElement::IsMutedProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "IsMuted", new Value (false));
	MediaElement::MarkersProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "Markers", Type::TIMELINEMARKER_COLLECTION);
	MediaElement::NaturalDurationProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "NaturalDuration", new Value (Duration::FromSeconds (0)), Type::DURATION, false, true);
	MediaElement::NaturalVideoHeightProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "NaturalVideoHeight", new Value (0.0), Type::DOUBLE, false, true);
	MediaElement::NaturalVideoWidthProperty = DependencyProperty::RegisterFull (Type::MEDIAELEMENT, "NaturalVideoWidth", new Value (0.0), Type::DOUBLE, false, true);
	MediaElement::PositionProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "Position", Type::TIMESPAN);
	MediaElement::VolumeProperty = DependencyProperty::Register (Type::MEDIAELEMENT, "Volume", new Value (0.5));
	NameScope::NameScopeProperty = DependencyProperty::Register (Type::NAMESCOPE, "NameScope", Type::NAMESCOPE);
#if SL_2_0

	ObjectAnimationUsingKeyFrames::KeyFramesProperty = DependencyProperty::Register (Type::OBJECTANIMATIONUSINGKEYFRAMES, "KeyFrames", Type::OBJECTKEYFRAME_COLLECTION);
	ObjectKeyFrame::KeyTimeProperty = DependencyProperty::Register (Type::OBJECTKEYFRAME, "KeyTime", Type::KEYTIME);
	ObjectKeyFrame::ValueProperty = DependencyProperty::Register (Type::OBJECTKEYFRAME, "Value", Type::MANAGED);
#endif
	Panel::BackgroundProperty = DependencyProperty::Register (Type::PANEL, "Background", Type::BRUSH);
	Panel::ChildrenProperty = DependencyProperty::Register (Type::PANEL, "Children", Type::UIELEMENT_COLLECTION);
	Path::DataProperty = DependencyProperty::Register (Type::PATH, "Data", Type::GEOMETRY);
	PathFigure::IsClosedProperty = DependencyProperty::Register (Type::PATHFIGURE, "IsClosed", new Value (false));
	PathFigure::SegmentsProperty = DependencyProperty::Register (Type::PATHFIGURE, "Segments", Type::PATHSEGMENT_COLLECTION);
	PathFigure::StartPointProperty = DependencyProperty::Register (Type::PATHFIGURE, "StartPoint", Type::POINT);
	PathGeometry::FiguresProperty = DependencyProperty::Register (Type::PATHGEOMETRY, "Figures", Type::PATHFIGURE_COLLECTION);
	PointAnimation::ByProperty = DependencyProperty::RegisterNullable (Type::POINTANIMATION, "By", Type::POINT);
	PointAnimation::FromProperty = DependencyProperty::RegisterNullable (Type::POINTANIMATION, "From", Type::POINT);
	PointAnimation::ToProperty = DependencyProperty::RegisterNullable (Type::POINTANIMATION, "To", Type::POINT);
	PointAnimationUsingKeyFrames::KeyFramesProperty = DependencyProperty::Register (Type::POINTANIMATIONUSINGKEYFRAMES, "KeyFrames", Type::POINTKEYFRAME_COLLECTION);
#if SL_2_0

	PointKeyFrame::KeyTimeProperty = DependencyProperty::Register (Type::POINTKEYFRAME, "KeyTime", Type::KEYTIME);
#endif
	PointKeyFrame::ValueProperty = DependencyProperty::RegisterNullable (Type::POINTKEYFRAME, "Value", Type::POINT);
	PolyBezierSegment::PointsProperty = DependencyProperty::Register (Type::POLYBEZIERSEGMENT, "Points", Type::POINT_COLLECTION);
	Polygon::FillRuleProperty = DependencyProperty::Register (Type::POLYGON, "FillRule", new Value (FillRuleEvenOdd));
	Polygon::PointsProperty = DependencyProperty::Register (Type::POLYGON, "Points", Type::POINT_COLLECTION);
	Polyline::FillRuleProperty = DependencyProperty::Register (Type::POLYLINE, "FillRule", new Value (FillRuleEvenOdd));
	Polyline::PointsProperty = DependencyProperty::Register (Type::POLYLINE, "Points", Type::POINT_COLLECTION);
	PolyLineSegment::PointsProperty = DependencyProperty::Register (Type::POLYLINESEGMENT, "Points", Type::POINT_COLLECTION);
	PolyQuadraticBezierSegment::PointsProperty = DependencyProperty::Register (Type::POLYQUADRATICBEZIERSEGMENT, "Points", Type::POINT_COLLECTION);
	QuadraticBezierSegment::Point1Property = DependencyProperty::Register (Type::QUADRATICBEZIERSEGMENT, "Point1", Type::POINT);
	QuadraticBezierSegment::Point2Property = DependencyProperty::Register (Type::QUADRATICBEZIERSEGMENT, "Point2", Type::POINT);
	RadialGradientBrush::CenterProperty = DependencyProperty::Register (Type::RADIALGRADIENTBRUSH, "Center", Type::POINT);
	RadialGradientBrush::GradientOriginProperty = DependencyProperty::Register (Type::RADIALGRADIENTBRUSH, "GradientOrigin", Type::POINT);
	RadialGradientBrush::RadiusXProperty = DependencyProperty::Register (Type::RADIALGRADIENTBRUSH, "RadiusX", new Value (0.5));
	RadialGradientBrush::RadiusYProperty = DependencyProperty::Register (Type::RADIALGRADIENTBRUSH, "RadiusY", new Value (0.5));
	Rectangle::RadiusXProperty = DependencyProperty::Register (Type::RECTANGLE, "RadiusX", new Value (0.0));
	Rectangle::RadiusYProperty = DependencyProperty::Register (Type::RECTANGLE, "RadiusY", new Value (0.0));
	RectangleGeometry::RadiusXProperty = DependencyProperty::Register (Type::RECTANGLEGEOMETRY, "RadiusX", new Value (0.0));
	RectangleGeometry::RadiusYProperty = DependencyProperty::Register (Type::RECTANGLEGEOMETRY, "RadiusY", new Value (0.0));
	RectangleGeometry::RectProperty = DependencyProperty::Register (Type::RECTANGLEGEOMETRY, "Rect", Type::RECT);
	RotateTransform::AngleProperty = DependencyProperty::Register (Type::ROTATETRANSFORM, "Angle", new Value (0.0));
	RotateTransform::CenterXProperty = DependencyProperty::Register (Type::ROTATETRANSFORM, "CenterX", new Value (0.0));
	RotateTransform::CenterYProperty = DependencyProperty::Register (Type::ROTATETRANSFORM, "CenterY", new Value (0.0));
#if SL_2_0

	RowDefinition::HeightProperty = DependencyProperty::Register (Type::ROWDEFINITION, "Height", Type::GRIDLENGTH);
	RowDefinition::MaxHeightProperty = DependencyProperty::Register (Type::ROWDEFINITION, "MaxHeight", Type::DOUBLE);
	RowDefinition::MinHeightProperty = DependencyProperty::Register (Type::ROWDEFINITION, "MinHeight", Type::DOUBLE);
#endif
	Run::TextProperty = DependencyProperty::Register (Type::RUN, "Text", Type::STRING);
	ScaleTransform::CenterXProperty = DependencyProperty::Register (Type::SCALETRANSFORM, "CenterX", new Value (0.0));
	ScaleTransform::CenterYProperty = DependencyProperty::Register (Type::SCALETRANSFORM, "CenterY", new Value (0.0));
	ScaleTransform::ScaleXProperty = DependencyProperty::Register (Type::SCALETRANSFORM, "ScaleX", new Value (1.0));
	ScaleTransform::ScaleYProperty = DependencyProperty::Register (Type::SCALETRANSFORM, "ScaleY", new Value (1.0));
#if SL_2_0

	Setter::DependencyPropertyProperty = DependencyProperty::Register (Type::SETTER, "DependencyProperty", Type::DEPENDENCYPROPERTY);
	Setter::PropertyProperty = DependencyProperty::Register (Type::SETTER, "Property", Type::STRING);
	Setter::ValueProperty = DependencyProperty::Register (Type::SETTER, "Value", Type::MANAGED);
#endif
	Shape::FillProperty = DependencyProperty::Register (Type::SHAPE, "Fill", Type::BRUSH);
	Shape::StretchProperty = DependencyProperty::Register (Type::SHAPE, "Stretch", new Value (StretchNone));
	Shape::StrokeDashArrayProperty = DependencyProperty::Register (Type::SHAPE, "StrokeDashArray", Type::DOUBLE_COLLECTION);
	Shape::StrokeDashCapProperty = DependencyProperty::Register (Type::SHAPE, "StrokeDashCap", new Value (PenLineCapFlat));
	Shape::StrokeDashOffsetProperty = DependencyProperty::Register (Type::SHAPE, "StrokeDashOffset", new Value (0.0));
	Shape::StrokeEndLineCapProperty = DependencyProperty::Register (Type::SHAPE, "StrokeEndLineCap", new Value (PenLineCapFlat));
	Shape::StrokeLineJoinProperty = DependencyProperty::Register (Type::SHAPE, "StrokeLineJoin", new Value (PenLineJoinMiter));
	Shape::StrokeMiterLimitProperty = DependencyProperty::Register (Type::SHAPE, "StrokeMiterLimit", new Value (10.0));
	Shape::StrokeProperty = DependencyProperty::Register (Type::SHAPE, "Stroke", Type::BRUSH);
	Shape::StrokeStartLineCapProperty = DependencyProperty::Register (Type::SHAPE, "StrokeStartLineCap", new Value (PenLineCapFlat));
	Shape::StrokeThicknessProperty = DependencyProperty::Register (Type::SHAPE, "StrokeThickness", new Value (1.0));
	SkewTransform::AngleXProperty = DependencyProperty::Register (Type::SKEWTRANSFORM, "AngleX", new Value (0.0));
	SkewTransform::AngleYProperty = DependencyProperty::Register (Type::SKEWTRANSFORM, "AngleY", new Value (0.0));
	SkewTransform::CenterXProperty = DependencyProperty::Register (Type::SKEWTRANSFORM, "CenterX", new Value (0.0));
	SkewTransform::CenterYProperty = DependencyProperty::Register (Type::SKEWTRANSFORM, "CenterY", new Value (0.0));
	SolidColorBrush::ColorProperty = DependencyProperty::Register (Type::SOLIDCOLORBRUSH, "Color", new Value (Color (0x00000000)));
	SplineColorKeyFrame::KeySplineProperty = DependencyProperty::Register (Type::SPLINECOLORKEYFRAME, "KeySpline", Type::KEYSPLINE);
	SplineDoubleKeyFrame::KeySplineProperty = DependencyProperty::Register (Type::SPLINEDOUBLEKEYFRAME, "KeySpline", Type::KEYSPLINE);
	SplinePointKeyFrame::KeySplineProperty = DependencyProperty::Register (Type::SPLINEPOINTKEYFRAME, "KeySpline", Type::KEYSPLINE);
#if SL_2_0

	StackPanel::OrientationProperty = DependencyProperty::Register (Type::STACKPANEL, "Orientation", Type::INT32);
#endif
	Storyboard::TargetNameProperty = DependencyProperty::RegisterFull (Type::STORYBOARD, "TargetName", NULL, Type::STRING, true, false);
	Storyboard::TargetPropertyProperty = DependencyProperty::RegisterFull (Type::STORYBOARD, "TargetProperty", NULL, Type::STRING, true, false);
	Stroke::DrawingAttributesProperty = DependencyProperty::Register (Type::STROKE, "DrawingAttributes", Type::DRAWINGATTRIBUTES);
	Stroke::StylusPointsProperty = DependencyProperty::Register (Type::STROKE, "StylusPoints", Type::STYLUSPOINT_COLLECTION);
#if SL_2_0

	Style::SettersProperty = DependencyProperty::Register (Type::STYLE, "Setters", Type::SETTERBASE_COLLECTION);
	Style::TargetTypeProperty = DependencyProperty::Register (Type::STYLE, "TargetType", Type::MANAGED);
#endif
	StylusInfo::DeviceTypeProperty = DependencyProperty::Register (Type::STYLUSINFO, "DeviceType", new Value (TabletDeviceTypeMouse));
	StylusInfo::IsInvertedProperty = DependencyProperty::Register (Type::STYLUSINFO, "IsInverted", new Value (false));
	StylusPoint::PressureFactorProperty = DependencyProperty::Register (Type::STYLUSPOINT, "PressureFactor", new Value (0.5));
	StylusPoint::XProperty = DependencyProperty::Register (Type::STYLUSPOINT, "X", new Value (0.0));
	StylusPoint::YProperty = DependencyProperty::Register (Type::STYLUSPOINT, "Y", new Value (0.0));
	TextBlock::ActualHeightProperty = DependencyProperty::RegisterFull (Type::TEXTBLOCK, "ActualHeight", NULL, Type::DOUBLE, false, true);
	TextBlock::ActualWidthProperty = DependencyProperty::RegisterFull (Type::TEXTBLOCK, "ActualWidth", NULL, Type::DOUBLE, false, true);
	TextBlock::FontFamilyProperty = DependencyProperty::Register (Type::TEXTBLOCK, "FontFamily", new Value (TEXTBLOCK_FONT_FAMILY));
	TextBlock::FontSizeProperty = DependencyProperty::Register (Type::TEXTBLOCK, "FontSize", new Value (TEXTBLOCK_FONT_SIZE));
	TextBlock::FontStretchProperty = DependencyProperty::Register (Type::TEXTBLOCK, "FontStretch", new Value (TEXTBLOCK_FONT_STRETCH));
	TextBlock::FontStyleProperty = DependencyProperty::Register (Type::TEXTBLOCK, "FontStyle", new Value (TEXTBLOCK_FONT_STYLE));
	TextBlock::FontWeightProperty = DependencyProperty::Register (Type::TEXTBLOCK, "FontWeight", new Value (TEXTBLOCK_FONT_WEIGHT));
	TextBlock::ForegroundProperty = DependencyProperty::Register (Type::TEXTBLOCK, "Foreground", Type::BRUSH);
	TextBlock::InlinesProperty = DependencyProperty::Register (Type::TEXTBLOCK, "Inlines", Type::INLINES);
	TextBlock::TextDecorationsProperty = DependencyProperty::Register (Type::TEXTBLOCK, "TextDecorations", new Value (TextDecorationsNone));
	TextBlock::TextProperty = DependencyProperty::Register (Type::TEXTBLOCK, "Text", Type::STRING);
	TextBlock::TextWrappingProperty = DependencyProperty::Register (Type::TEXTBLOCK, "TextWrapping", new Value (TextWrappingNoWrap));
	TileBrush::AlignmentXProperty = DependencyProperty::Register (Type::TILEBRUSH, "AlignmentX", new Value (AlignmentXCenter));
	TileBrush::AlignmentYProperty = DependencyProperty::Register (Type::TILEBRUSH, "AlignmentY", new Value (AlignmentYCenter));
	TileBrush::StretchProperty = DependencyProperty::Register (Type::TILEBRUSH, "Stretch", new Value (StretchFill));
	Timeline::AutoReverseProperty = DependencyProperty::Register (Type::TIMELINE, "AutoReverse", new Value (false));
	Timeline::BeginTimeProperty = DependencyProperty::RegisterNullable (Type::TIMELINE, "BeginTime", Type::TIMESPAN);
	Timeline::DurationProperty = DependencyProperty::Register (Type::TIMELINE, "Duration", new Value (Duration::Automatic));
	Timeline::FillBehaviorProperty = DependencyProperty::Register (Type::TIMELINE, "FillBehavior", new Value (FillBehaviorHoldEnd));
	Timeline::RepeatBehaviorProperty = DependencyProperty::Register (Type::TIMELINE, "RepeatBehavior", new Value (RepeatBehavior ((double) 1)));
	Timeline::SpeedRatioProperty = DependencyProperty::Register (Type::TIMELINE, "SpeedRatio", new Value (1.0));
	TimelineGroup::ChildrenProperty = DependencyProperty::Register (Type::TIMELINEGROUP, "Children", Type::TIMELINE_COLLECTION);
	TimelineMarker::TextProperty = DependencyProperty::Register (Type::TIMELINEMARKER, "Text", Type::STRING);
	TimelineMarker::TimeProperty = DependencyProperty::Register (Type::TIMELINEMARKER, "Time", Type::TIMESPAN);
	TimelineMarker::TypeProperty = DependencyProperty::Register (Type::TIMELINEMARKER, "Type", Type::STRING);
	TransformGroup::ChildrenProperty = DependencyProperty::Register (Type::TRANSFORMGROUP, "Children", Type::TRANSFORM_COLLECTION);
	TranslateTransform::XProperty = DependencyProperty::Register (Type::TRANSLATETRANSFORM, "X", new Value (0.0));
	TranslateTransform::YProperty = DependencyProperty::Register (Type::TRANSLATETRANSFORM, "Y", new Value (0.0));
	UIElement::ClipProperty = DependencyProperty::Register (Type::UIELEMENT, "Clip", Type::GEOMETRY);
	UIElement::CursorProperty = DependencyProperty::Register (Type::UIELEMENT, "Cursor", new Value (MouseCursorDefault));
	UIElement::IsHitTestVisibleProperty = DependencyProperty::Register (Type::UIELEMENT, "IsHitTestVisible", new Value (true));
	UIElement::OpacityMaskProperty = DependencyProperty::Register (Type::UIELEMENT, "OpacityMask", Type::BRUSH);
	UIElement::OpacityProperty = DependencyProperty::Register (Type::UIELEMENT, "Opacity", new Value (1.0));
	UIElement::RenderTransformOriginProperty = DependencyProperty::Register (Type::UIELEMENT, "RenderTransformOrigin", new Value (Point (0,0)));
	UIElement::RenderTransformProperty = DependencyProperty::Register (Type::UIELEMENT, "RenderTransform", Type::TRANSFORM);
	UIElement::ResourcesProperty = DependencyProperty::Register (Type::UIELEMENT, "Resources", Type::RESOURCE_DICTIONARY);
	UIElement::TagProperty = DependencyProperty::Register (Type::UIELEMENT, "Tag", Type::STRING);
	UIElement::TriggersProperty = DependencyProperty::Register (Type::UIELEMENT, "Triggers", Type::TRIGGER_COLLECTION);
	UIElement::VisibilityProperty = DependencyProperty::Register (Type::UIELEMENT, "Visibility", new Value (VisibilityVisible));
	UIElement::ZIndexProperty = DependencyProperty::Register (Type::UIELEMENT, "ZIndex", new Value (0));
#if SL_2_0

	UserControl::ContentProperty = DependencyProperty::Register (Type::USERCONTROL, "Content", Type::UIELEMENT);
#endif
	VideoBrush::SourceNameProperty = DependencyProperty::Register (Type::VIDEOBRUSH, "SourceName", new Value (""));
	VisualBrush::VisualProperty = DependencyProperty::Register (Type::VISUALBRUSH, "Visual", Type::UIELEMENT);
}

#if SL_2_0
DependencyProperty *Application::ResourcesProperty = NULL;
#endif
DependencyProperty *ArcSegment::IsLargeArcProperty = NULL;
DependencyProperty *ArcSegment::PointProperty = NULL;
DependencyProperty *ArcSegment::RotationAngleProperty = NULL;
DependencyProperty *ArcSegment::SizeProperty = NULL;
DependencyProperty *ArcSegment::SweepDirectionProperty = NULL;
#if SL_2_0
DependencyProperty *AssemblyPart::SourceProperty = NULL;
#endif
DependencyProperty *BeginStoryboard::StoryboardProperty = NULL;
DependencyProperty *BezierSegment::Point1Property = NULL;
DependencyProperty *BezierSegment::Point2Property = NULL;
DependencyProperty *BezierSegment::Point3Property = NULL;
DependencyProperty *Brush::ChangedProperty = NULL;
DependencyProperty *Brush::OpacityProperty = NULL;
DependencyProperty *Brush::RelativeTransformProperty = NULL;
DependencyProperty *Brush::TransformProperty = NULL;
DependencyProperty *Canvas::LeftProperty = NULL;
DependencyProperty *Canvas::TopProperty = NULL;
DependencyProperty *Collection::CountProperty = NULL;
DependencyProperty *ColorAnimation::ByProperty = NULL;
DependencyProperty *ColorAnimation::FromProperty = NULL;
DependencyProperty *ColorAnimation::ToProperty = NULL;
DependencyProperty *ColorAnimationUsingKeyFrames::KeyFramesProperty = NULL;
#if SL_2_0
DependencyProperty *ColorKeyFrame::KeyTimeProperty = NULL;
#endif
DependencyProperty *ColorKeyFrame::ValueProperty = NULL;
#if SL_2_0
DependencyProperty *ColumnDefinition::MaxWidthProperty = NULL;
DependencyProperty *ColumnDefinition::MinWidthProperty = NULL;
DependencyProperty *ColumnDefinition::WidthProperty = NULL;
DependencyProperty *ContentControl::ContentProperty = NULL;
DependencyProperty *ContentControl::ContentTemplateProperty = NULL;
DependencyProperty *ContentControl::IsEnabledProperty = NULL;
DependencyProperty *ContentControl::TextAlignmentProperty = NULL;
DependencyProperty *ContentControl::TextDecorationsProperty = NULL;
DependencyProperty *ContentControl::TextWrappingProperty = NULL;
DependencyProperty *Control::BackgroundProperty = NULL;
DependencyProperty *Control::BorderBrushProperty = NULL;
DependencyProperty *Control::BorderThicknessProperty = NULL;
DependencyProperty *Control::FontFamilyProperty = NULL;
DependencyProperty *Control::FontSizeProperty = NULL;
DependencyProperty *Control::FontStretchProperty = NULL;
DependencyProperty *Control::FontStyleProperty = NULL;
DependencyProperty *Control::FontWeightProperty = NULL;
DependencyProperty *Control::ForegroundProperty = NULL;
DependencyProperty *Control::HorizontalContentAlignmentProperty = NULL;
DependencyProperty *Control::IsTabStopProperty = NULL;
DependencyProperty *Control::PaddingProperty = NULL;
DependencyProperty *Control::StyleProperty = NULL;
DependencyProperty *Control::TabIndexProperty = NULL;
DependencyProperty *Control::TabNavigationProperty = NULL;
DependencyProperty *Control::TemplateProperty = NULL;
DependencyProperty *Control::VerticalContentAlignmentProperty = NULL;
DependencyProperty *ControlTemplate::TargetTypeProperty = NULL;
#endif
DependencyProperty *DependencyObject::NameProperty = NULL;
#if SL_2_0
DependencyProperty *Deployment::EntryPointAssemblyProperty = NULL;
DependencyProperty *Deployment::EntryPointTypeProperty = NULL;
DependencyProperty *Deployment::ExternalCallersFromCrossDomainProperty = NULL;
DependencyProperty *Deployment::PartsProperty = NULL;
DependencyProperty *Deployment::RuntimeVersionProperty = NULL;
#endif
DependencyProperty *DoubleAnimation::ByProperty = NULL;
DependencyProperty *DoubleAnimation::FromProperty = NULL;
DependencyProperty *DoubleAnimation::ToProperty = NULL;
DependencyProperty *DoubleAnimationUsingKeyFrames::KeyFramesProperty = NULL;
#if SL_2_0
DependencyProperty *DoubleKeyFrame::KeyTimeProperty = NULL;
#endif
DependencyProperty *DoubleKeyFrame::ValueProperty = NULL;
DependencyProperty *Downloader::DownloadProgressProperty = NULL;
DependencyProperty *Downloader::ResponseTextProperty = NULL;
DependencyProperty *Downloader::StatusProperty = NULL;
DependencyProperty *Downloader::StatusTextProperty = NULL;
DependencyProperty *Downloader::UriProperty = NULL;
DependencyProperty *DrawingAttributes::ColorProperty = NULL;
DependencyProperty *DrawingAttributes::HeightProperty = NULL;
DependencyProperty *DrawingAttributes::OutlineColorProperty = NULL;
DependencyProperty *DrawingAttributes::WidthProperty = NULL;
DependencyProperty *EllipseGeometry::CenterProperty = NULL;
DependencyProperty *EllipseGeometry::RadiusXProperty = NULL;
DependencyProperty *EllipseGeometry::RadiusYProperty = NULL;
DependencyProperty *EventTrigger::ActionsProperty = NULL;
DependencyProperty *EventTrigger::RoutedEventProperty = NULL;
#if SL_2_0
DependencyProperty *FrameworkElement::ActualHeightProperty = NULL;
DependencyProperty *FrameworkElement::ActualWidthProperty = NULL;
DependencyProperty *FrameworkElement::DataContextProperty = NULL;
#endif
DependencyProperty *FrameworkElement::HeightProperty = NULL;
#if SL_2_0
DependencyProperty *FrameworkElement::HorizontalAlignmentProperty = NULL;
DependencyProperty *FrameworkElement::LanguageProperty = NULL;
DependencyProperty *FrameworkElement::MarginProperty = NULL;
DependencyProperty *FrameworkElement::MaxHeightProperty = NULL;
DependencyProperty *FrameworkElement::MaxWidthProperty = NULL;
DependencyProperty *FrameworkElement::MinHeightProperty = NULL;
DependencyProperty *FrameworkElement::MinWidthProperty = NULL;
DependencyProperty *FrameworkElement::StyleProperty = NULL;
DependencyProperty *FrameworkElement::VerticalAlignmentProperty = NULL;
#endif
DependencyProperty *FrameworkElement::WidthProperty = NULL;
DependencyProperty *Geometry::FillRuleProperty = NULL;
DependencyProperty *Geometry::TransformProperty = NULL;
DependencyProperty *GeometryGroup::ChildrenProperty = NULL;
DependencyProperty *Glyphs::FillProperty = NULL;
DependencyProperty *Glyphs::FontRenderingEmSizeProperty = NULL;
DependencyProperty *Glyphs::FontUriProperty = NULL;
DependencyProperty *Glyphs::IndicesProperty = NULL;
DependencyProperty *Glyphs::OriginXProperty = NULL;
DependencyProperty *Glyphs::OriginYProperty = NULL;
DependencyProperty *Glyphs::StyleSimulationsProperty = NULL;
DependencyProperty *Glyphs::UnicodeStringProperty = NULL;
DependencyProperty *GradientBrush::ColorInterpolationModeProperty = NULL;
DependencyProperty *GradientBrush::GradientStopsProperty = NULL;
DependencyProperty *GradientBrush::MappingModeProperty = NULL;
DependencyProperty *GradientBrush::SpreadMethodProperty = NULL;
DependencyProperty *GradientStop::ColorProperty = NULL;
DependencyProperty *GradientStop::OffsetProperty = NULL;
#if SL_2_0
DependencyProperty *Grid::ColumnDefinitionsProperty = NULL;
DependencyProperty *Grid::ColumnProperty = NULL;
DependencyProperty *Grid::ColumnSpanProperty = NULL;
DependencyProperty *Grid::RowDefinitionsProperty = NULL;
DependencyProperty *Grid::RowProperty = NULL;
DependencyProperty *Grid::RowSpanProperty = NULL;
DependencyProperty *Grid::ShowGridLinesProperty = NULL;
#endif
DependencyProperty *ImageBrush::DownloadProgressProperty = NULL;
DependencyProperty *ImageBrush::ImageSourceProperty = NULL;
DependencyProperty *InkPresenter::StrokesProperty = NULL;
DependencyProperty *Inline::FontFamilyProperty = NULL;
DependencyProperty *Inline::FontSizeProperty = NULL;
DependencyProperty *Inline::FontStretchProperty = NULL;
DependencyProperty *Inline::FontStyleProperty = NULL;
DependencyProperty *Inline::FontWeightProperty = NULL;
DependencyProperty *Inline::ForegroundProperty = NULL;
#if SL_2_0
DependencyProperty *Inline::LanguageProperty = NULL;
#endif
DependencyProperty *Inline::TextDecorationsProperty = NULL;
DependencyProperty *KeyFrame::KeyTimeProperty = NULL;
DependencyProperty *Line::X1Property = NULL;
DependencyProperty *Line::X2Property = NULL;
DependencyProperty *Line::Y1Property = NULL;
DependencyProperty *Line::Y2Property = NULL;
DependencyProperty *LinearGradientBrush::EndPointProperty = NULL;
DependencyProperty *LinearGradientBrush::StartPointProperty = NULL;
DependencyProperty *LineGeometry::EndPointProperty = NULL;
DependencyProperty *LineGeometry::StartPointProperty = NULL;
DependencyProperty *LineSegment::PointProperty = NULL;
DependencyProperty *Matrix::M11Property = NULL;
DependencyProperty *Matrix::M12Property = NULL;
DependencyProperty *Matrix::M21Property = NULL;
DependencyProperty *Matrix::M22Property = NULL;
DependencyProperty *Matrix::OffsetXProperty = NULL;
DependencyProperty *Matrix::OffsetYProperty = NULL;
DependencyProperty *MatrixTransform::MatrixProperty = NULL;
DependencyProperty *MediaAttribute::ValueProperty = NULL;
DependencyProperty *MediaBase::DownloadProgressProperty = NULL;
DependencyProperty *MediaBase::SourceProperty = NULL;
DependencyProperty *MediaBase::StretchProperty = NULL;
DependencyProperty *MediaElement::AttributesProperty = NULL;
DependencyProperty *MediaElement::AudioStreamCountProperty = NULL;
DependencyProperty *MediaElement::AudioStreamIndexProperty = NULL;
DependencyProperty *MediaElement::AutoPlayProperty = NULL;
DependencyProperty *MediaElement::BalanceProperty = NULL;
DependencyProperty *MediaElement::BufferingProgressProperty = NULL;
DependencyProperty *MediaElement::BufferingTimeProperty = NULL;
DependencyProperty *MediaElement::CanPauseProperty = NULL;
DependencyProperty *MediaElement::CanSeekProperty = NULL;
DependencyProperty *MediaElement::CurrentStateProperty = NULL;
DependencyProperty *MediaElement::IsMutedProperty = NULL;
DependencyProperty *MediaElement::MarkersProperty = NULL;
DependencyProperty *MediaElement::NaturalDurationProperty = NULL;
DependencyProperty *MediaElement::NaturalVideoHeightProperty = NULL;
DependencyProperty *MediaElement::NaturalVideoWidthProperty = NULL;
DependencyProperty *MediaElement::PositionProperty = NULL;
DependencyProperty *MediaElement::VolumeProperty = NULL;
DependencyProperty *NameScope::NameScopeProperty = NULL;
#if SL_2_0
DependencyProperty *ObjectAnimationUsingKeyFrames::KeyFramesProperty = NULL;
DependencyProperty *ObjectKeyFrame::KeyTimeProperty = NULL;
DependencyProperty *ObjectKeyFrame::ValueProperty = NULL;
#endif
DependencyProperty *Panel::BackgroundProperty = NULL;
DependencyProperty *Panel::ChildrenProperty = NULL;
DependencyProperty *Path::DataProperty = NULL;
DependencyProperty *PathFigure::IsClosedProperty = NULL;
DependencyProperty *PathFigure::SegmentsProperty = NULL;
DependencyProperty *PathFigure::StartPointProperty = NULL;
DependencyProperty *PathGeometry::FiguresProperty = NULL;
DependencyProperty *PointAnimation::ByProperty = NULL;
DependencyProperty *PointAnimation::FromProperty = NULL;
DependencyProperty *PointAnimation::ToProperty = NULL;
DependencyProperty *PointAnimationUsingKeyFrames::KeyFramesProperty = NULL;
#if SL_2_0
DependencyProperty *PointKeyFrame::KeyTimeProperty = NULL;
#endif
DependencyProperty *PointKeyFrame::ValueProperty = NULL;
DependencyProperty *PolyBezierSegment::PointsProperty = NULL;
DependencyProperty *Polygon::FillRuleProperty = NULL;
DependencyProperty *Polygon::PointsProperty = NULL;
DependencyProperty *Polyline::FillRuleProperty = NULL;
DependencyProperty *Polyline::PointsProperty = NULL;
DependencyProperty *PolyLineSegment::PointsProperty = NULL;
DependencyProperty *PolyQuadraticBezierSegment::PointsProperty = NULL;
DependencyProperty *QuadraticBezierSegment::Point1Property = NULL;
DependencyProperty *QuadraticBezierSegment::Point2Property = NULL;
DependencyProperty *RadialGradientBrush::CenterProperty = NULL;
DependencyProperty *RadialGradientBrush::GradientOriginProperty = NULL;
DependencyProperty *RadialGradientBrush::RadiusXProperty = NULL;
DependencyProperty *RadialGradientBrush::RadiusYProperty = NULL;
DependencyProperty *Rectangle::RadiusXProperty = NULL;
DependencyProperty *Rectangle::RadiusYProperty = NULL;
DependencyProperty *RectangleGeometry::RadiusXProperty = NULL;
DependencyProperty *RectangleGeometry::RadiusYProperty = NULL;
DependencyProperty *RectangleGeometry::RectProperty = NULL;
DependencyProperty *RotateTransform::AngleProperty = NULL;
DependencyProperty *RotateTransform::CenterXProperty = NULL;
DependencyProperty *RotateTransform::CenterYProperty = NULL;
#if SL_2_0
DependencyProperty *RowDefinition::HeightProperty = NULL;
DependencyProperty *RowDefinition::MaxHeightProperty = NULL;
DependencyProperty *RowDefinition::MinHeightProperty = NULL;
#endif
DependencyProperty *Run::TextProperty = NULL;
DependencyProperty *ScaleTransform::CenterXProperty = NULL;
DependencyProperty *ScaleTransform::CenterYProperty = NULL;
DependencyProperty *ScaleTransform::ScaleXProperty = NULL;
DependencyProperty *ScaleTransform::ScaleYProperty = NULL;
#if SL_2_0
DependencyProperty *Setter::DependencyPropertyProperty = NULL;
DependencyProperty *Setter::PropertyProperty = NULL;
DependencyProperty *Setter::ValueProperty = NULL;
#endif
DependencyProperty *Shape::FillProperty = NULL;
DependencyProperty *Shape::StretchProperty = NULL;
DependencyProperty *Shape::StrokeDashArrayProperty = NULL;
DependencyProperty *Shape::StrokeDashCapProperty = NULL;
DependencyProperty *Shape::StrokeDashOffsetProperty = NULL;
DependencyProperty *Shape::StrokeEndLineCapProperty = NULL;
DependencyProperty *Shape::StrokeLineJoinProperty = NULL;
DependencyProperty *Shape::StrokeMiterLimitProperty = NULL;
DependencyProperty *Shape::StrokeProperty = NULL;
DependencyProperty *Shape::StrokeStartLineCapProperty = NULL;
DependencyProperty *Shape::StrokeThicknessProperty = NULL;
DependencyProperty *SkewTransform::AngleXProperty = NULL;
DependencyProperty *SkewTransform::AngleYProperty = NULL;
DependencyProperty *SkewTransform::CenterXProperty = NULL;
DependencyProperty *SkewTransform::CenterYProperty = NULL;
DependencyProperty *SolidColorBrush::ColorProperty = NULL;
DependencyProperty *SplineColorKeyFrame::KeySplineProperty = NULL;
DependencyProperty *SplineDoubleKeyFrame::KeySplineProperty = NULL;
DependencyProperty *SplinePointKeyFrame::KeySplineProperty = NULL;
#if SL_2_0
DependencyProperty *StackPanel::OrientationProperty = NULL;
#endif
DependencyProperty *Storyboard::TargetNameProperty = NULL;
DependencyProperty *Storyboard::TargetPropertyProperty = NULL;
DependencyProperty *Stroke::DrawingAttributesProperty = NULL;
DependencyProperty *Stroke::StylusPointsProperty = NULL;
#if SL_2_0
DependencyProperty *Style::SettersProperty = NULL;
DependencyProperty *Style::TargetTypeProperty = NULL;
#endif
DependencyProperty *StylusInfo::DeviceTypeProperty = NULL;
DependencyProperty *StylusInfo::IsInvertedProperty = NULL;
DependencyProperty *StylusPoint::PressureFactorProperty = NULL;
DependencyProperty *StylusPoint::XProperty = NULL;
DependencyProperty *StylusPoint::YProperty = NULL;
DependencyProperty *TextBlock::ActualHeightProperty = NULL;
DependencyProperty *TextBlock::ActualWidthProperty = NULL;
DependencyProperty *TextBlock::FontFamilyProperty = NULL;
DependencyProperty *TextBlock::FontSizeProperty = NULL;
DependencyProperty *TextBlock::FontStretchProperty = NULL;
DependencyProperty *TextBlock::FontStyleProperty = NULL;
DependencyProperty *TextBlock::FontWeightProperty = NULL;
DependencyProperty *TextBlock::ForegroundProperty = NULL;
DependencyProperty *TextBlock::InlinesProperty = NULL;
DependencyProperty *TextBlock::TextDecorationsProperty = NULL;
DependencyProperty *TextBlock::TextProperty = NULL;
DependencyProperty *TextBlock::TextWrappingProperty = NULL;
DependencyProperty *TileBrush::AlignmentXProperty = NULL;
DependencyProperty *TileBrush::AlignmentYProperty = NULL;
DependencyProperty *TileBrush::StretchProperty = NULL;
DependencyProperty *Timeline::AutoReverseProperty = NULL;
DependencyProperty *Timeline::BeginTimeProperty = NULL;
DependencyProperty *Timeline::DurationProperty = NULL;
DependencyProperty *Timeline::FillBehaviorProperty = NULL;
DependencyProperty *Timeline::RepeatBehaviorProperty = NULL;
DependencyProperty *Timeline::SpeedRatioProperty = NULL;
DependencyProperty *TimelineGroup::ChildrenProperty = NULL;
DependencyProperty *TimelineMarker::TextProperty = NULL;
DependencyProperty *TimelineMarker::TimeProperty = NULL;
DependencyProperty *TimelineMarker::TypeProperty = NULL;
DependencyProperty *TransformGroup::ChildrenProperty = NULL;
DependencyProperty *TranslateTransform::XProperty = NULL;
DependencyProperty *TranslateTransform::YProperty = NULL;
DependencyProperty *UIElement::ClipProperty = NULL;
DependencyProperty *UIElement::CursorProperty = NULL;
DependencyProperty *UIElement::IsHitTestVisibleProperty = NULL;
DependencyProperty *UIElement::OpacityMaskProperty = NULL;
DependencyProperty *UIElement::OpacityProperty = NULL;
DependencyProperty *UIElement::RenderTransformOriginProperty = NULL;
DependencyProperty *UIElement::RenderTransformProperty = NULL;
DependencyProperty *UIElement::ResourcesProperty = NULL;
DependencyProperty *UIElement::TagProperty = NULL;
DependencyProperty *UIElement::TriggersProperty = NULL;
DependencyProperty *UIElement::VisibilityProperty = NULL;
DependencyProperty *UIElement::ZIndexProperty = NULL;
#if SL_2_0
DependencyProperty *UserControl::ContentProperty = NULL;
#endif
DependencyProperty *VideoBrush::SourceNameProperty = NULL;
DependencyProperty *VisualBrush::VisualProperty = NULL;

